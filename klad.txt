mobile project start

expo init projectnaam
cd projectnaam
npm i react-native-elements --save
npm i --save react-native-vector-icons
npm i --save react-native-safe-area-context
npm install expo-app-loading @react-navigation/native @react-navigation/stack @react-navigation/bottom-tabs @react-navigation/drawer redux-persist redux-thunk uuid redux react-redux @reduxjs/toolkit --save


expo install @react-native-async-storage/async-storage react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view @react-native-community/slider @react-native-picker/picker expo-camera expo-contacts expo-image-picker expo-location expo-sensors react-native-maps react-native-webview firebase expo-notifications


expo start


            <Text>Name: {data.CourseName}</Text>
            <Text>Description: {data.CourseDescription}</Text>

import { ThemeProvider } from 'react-native-elements';

const MyApp = () => {
  return (
    <ThemeProvider>
      
    </ThemeProvider>
  );
};

Opdracht
Bekijk eerst de volgende video (VS Code)
Maak een applicatie met drie components (Header, Content, Footer)
Voor de layout van de applicatie zoals in de screenshots achter deze slide maak je gebruik van flexbox en ook van de StyleSheet objecten (zoals ook besproken in de volgende video)
De Header component bevat enkel de tekst “Header”, hetzelfde geldt voor de footer maar dan “Footer”
De Content component bevat een afbeelding van met een link van het internet, ook een tekst met uw naam zoals in de screenshot te zien is deze moet op dezelfde rij staan als de afbeelding en het liefste zoals op de afbeelding
De Content component moet ook nog een Lijst hebben met een aantal vakken die je hieraan meegeeft als een lijst zoals op het voorbeeld te zien is


expo install react-native-gesture-handler react-native-reanimated 	react-native-screens react-native-safe-area-context @react-native-community/masked-view


<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/8.6.2/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/8.6.2/firebase-analytics.js"></script>

<script>
  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  var firebaseConfig = {
    apiKey: "AIzaSyAQGOJILL_OCSjW8hT8VuMOp9O6pWBDOs8",
    authDomain: "mobileproject-271d2.firebaseapp.com",
    projectId: "mobileproject-271d2",
    storageBucket: "mobileproject-271d2.appspot.com",
    messagingSenderId: "953245568034",
    appId: "1:953245568034:web:90f1859ec7d4068095ce7b",
    measurementId: "G-J3LKETMNYF"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
  firebase.analytics();
</script>



// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyAQGOJILL_OCSjW8hT8VuMOp9O6pWBDOs8",
  authDomain: "mobileproject-271d2.firebaseapp.com",
  projectId: "mobileproject-271d2",
  storageBucket: "mobileproject-271d2.appspot.com",
  messagingSenderId: "953245568034",
  appId: "1:953245568034:web:90f1859ec7d4068095ce7b",
  measurementId: "G-J3LKETMNYF"
};

onButtonClick : () => 
    {
        let inputval;
        if($("#gebruikersnaamInput").val() != "")
        {
            inputval = $("#gebruikersnaamInput").val();
        }
        else{alert("Please enter a valid user name");}
        $.ajax(
        {
            url: "https://api.github.com/users/"+ inputval,
            type: "GET",
            success: JqueryNS.insertData,
            error: JqueryNS.ajaxErrorFunction
        });
    },
	
	
	
	
	
import React from 'react';
import { createBottomTabNavigator } from "@react-navigation/bottom-tabs";
import { FontAwesome, AntDesign } from "@expo/vector-icons";
import StackNav from "./StackNav";
import  {HomeScreen}  from "../../Views/Home/HomeScreen";

const Tab = createBottomTabNavigator();

const TabNav = () =>
{
    return (
        <TabNav.Navigator>
            <Tab.Screen options=
                {
                    {
                        tabBarIcon: ({ color, size }) => <AntDesign size={ size } color={ color } name="home" />
                    }
                }
                name="Home"
                component={ {HomeScreen} } />
            <Tab.Screen options=
                {
                    {
                        tabBarIcon: ({ color, size }) => <FontAwesome size={ size } color={ color } name="list" />
                    }
                }
                name="List"
                component={ StackNav } />
        </TabNav.Navigator>
    );
};

export default TabNav;
